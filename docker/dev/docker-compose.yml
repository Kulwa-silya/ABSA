# docker/dev/docker-compose.yml
services:
  backend:
    build:
      context: ${PWD}/../../backend
      dockerfile: ${PWD}/../../docker/dev/backend/Dockerfile
    volumes:
      - ${PWD}/../../backend:/app
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
      - POSTGRES_DB=qa_form
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin12345
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
    user: "1000:1000"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ${PWD}/../../frontend
      dockerfile: ${PWD}/../../docker/dev/frontend/Dockerfile
    volumes:
      - ${PWD}/../../frontend:/app:delegated
      - /app/node_modules/
    user: "node:node"
    ports:
      - "0.0.0.0:3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    depends_on:
      - backend

  db:
    image: postgres:16.5-alpine3.20
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=qa_form
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
